//判断一个数是否是回文数
public static int reverse(int number)
{
	int reverseNumber = 0;
	for(;number!=0;)
	{
		reverseNumber = number%10+reverseNumber*10;
		number/=10;
	}
	return reverseNumber;
}
//判断一个数是否为素数
public static void isPrime(int number)
{
	int testNumber = 2;
	for(;testNumber<=Math.sqrt(number);testNumber++)
	{
		if(number%testNumber==0)
		{	System.out.println("The number is not a prime.");
			return;
		}
	}
	System.out.println("The number is a prime.");
	
}
//交换两个数的值,使用此方法不需要通过第三个变量实现交换两数的值
public static void change(int number1,int number2)
{
	System.out.println("number1= "+number1+" number2= "+number2);
	number1=number1^number2;
	number2=number1^number2;
	number1=number1^number2;
	System.out.println("number1= "+number1+" number2= "+number2);
}
//用二分法找数组中的指定值的位置
public static int findValue(int[] arr)
	{
		Scanner input = new Scanner(System.in);
		int value;
		System.out.println("\nPlease enter the value which you want to find: ");
		value = input.nextInt();
		int mid,max,min;//mid是中间数的下标，max是最大数的下标，min是最小数的下标
		min = 0;
		max = arr.length-1;
		mid = (min+max)/2;
		Arrays.sort(arr);
		while(max!=min)
		{
		if(arr[mid]<value)
		{
			min = mid;
			mid = (max+min)/2;
		}
		else 
			{
				if(arr[mid]>value)
					{
						max = mid;
						mid = (max+min)/2;
					}
				else return mid;
			}
		
		}
		return -1;
	}
//八皇后待续

import java.util.Scanner;
public class bookQuestion {

	public static void main(String[] args) {
		int[] queen = new int[8];
		Scanner input = new Scanner (System.in);
		System.out.println("enter a number:");
		int number = input.nextInt();
		queen[0]=number;
		for(int i=1;i<8;i++)
		{
			for(int j=0;j<8;j++)
				{
					if(test(queen))
					queen[i]=j;
					
				}
		}
		for(int i=0;i<8;i++)
		{	for(int j=0;j<8;j++)
				if(queen[i]==j)
				System.out.print("|Q");
				else 
					System.out.print("| ");
			System.out.println("|");
		}
	}
	public static boolean test(int[] queen)
	{
		
		for(int i=0;i<8;i++)
		{	for(int j = 0;j<8;j++)
			{if(j-i==0)
				continue;
			if((queen[i-j]-queen[i])/(j-i)!=1&&(queen[i-j]-queen[i])/(j-i)!=(-1)&&queen[i]==0)
				return true;
			}
		}
		return false;
	}
}
